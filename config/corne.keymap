#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define NUMBER 4
#define BASE2 5
#define LOWER2 6
#define RAISE2 7
#define ADJUST2 8
#define NUMBER2 9

#define COMBO_ALL(NAME, BINDINGS, KEYPOS) \
        combo_##NAME { \
                timeout-ms = <50>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <0 1 2 3 4 5 6 7 8 9>; \
        };

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
        combo_##NAME { \
                timeout-ms = <50>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <LAYERS>; \
        };

// Behavior configuration
// &mt {
//     tapping-term-ms = <200>;
//     quick_tap_ms = <0>;
//     flavor = "tap-preferred";
// };

// &lt {
//     tapping-term-ms = <200>;
//     quick_tap_ms = <0>;
//     flavor = "tap-preferred";
// };

// &sk {
//     release-after-ms = <500>;
//     quick-release;
// };

/ {
        macros {
                tab_prev: tab_prev {
                        label = "ZM_tab_prev";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_UP>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_next: tab_next {
                        label = "ZM_tab_next";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_DOWN>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                
                tab_reload: tab_reload {
                        label = "ZM_tab_reload";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp R>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_new: tab_new {
                        label = "ZM_tab_new";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp T>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_close: tab_close {
                        label = "ZM_tab_close";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp F4>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                lng_eng: lng_eng {
                        label = "ZM_lng_eng";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N1>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                lng_lt: lng_lt {
                        label = "ZM_lng_lt";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N2>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                lng_ru: lng_ru {
                        label = "ZM_lng_ru";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N3>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                key_summary: key_summary {
                        label = "ZM_key_summary";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp KP_NUMBER_6 &kp KP_NUMBER_1>
                                , <&macro_release &kp LALT>
                                ;
                };
        };

        behaviors {
                td0: tap_dance_0 {
                        label = "TAP_DANCE_0";
                        compatible = "zmk,behavior-tap-dance";

                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        // bindings = <&kp LCTRL>, <&mo NUMBER2>, <&mo NUMBER2>;
                        bindings = <&kp LCTRL>, <&mo NUMBER2>;
                };

                td1: tap_dance_1 {
                        label = "TAP_DANCE_1";
                        compatible = "zmk,behavior-tap-dance";

                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        // bindings = <&kp LCTRL>, <&mo NUMBER2>, <&mo NUMBER2>;
                        bindings = <&kp LSHFT>, <&kp RA(NUMBER2)>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";

                base_adjust_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };

                base2_adjust_layer {
                        if-layers = <6 7>;
                        then-layer = <8>;
                };
        };


        combos {
                compatible = "zmk,combos";

                COMBO_ALL(one, &kp ESC, 1 2)
                // COMBO(two, &kp N2, 1 3, 5)
                // COMBO(three, &kp N3, 2 12)
        };

        keymap {
                compatible = "zmk,keymap";

// | ESC      | Q | W | E    | R     | T       | ___ | Y         | U     | I   | O | P | BSPC |
// | TAB/NUMB | A | S | D    | F     | G       | ___ | H         | J     | K   | L | : |  '   |
// | SHIFT    | Z | X | C    | V     | B       | ___ | N         | M     | ,   | . | / | TAB  |
//                    | CTRL | LOWER | SPC/ALT | ___ | ENTER/ALT | RAISE | GUI |

                base_layer {
                        label = "BASE";
                        bindings = <
&kp ESC         &kp Q     &kp W  &kp E      &kp R      &kp T           &kp Y           &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&lt NUMBER TAB  &kp A     &kp S  &kp D      &kp F      &kp G           &kp H           &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT       &kp Z     &kp X  &kp C      &kp V      &kp B           &kp N           &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                                 &kp LCTRL  &mo LOWER  &mt LALT SPACE  &mt RALT ENTER  &mo RAISE  &kp LGUI
                        >;
                };

// | `     | 1     | 2    | 3    | 4    | 5    | ___ | 6     | 7     | 8    | 9  | 0     | BSPC |
// | DEL   | TABCL | TABP | TABN | TABR | TABN | ___ |       | -     | =    | [  | ]     | \    |
// | SHIFT | PREV  | NEXT | PLAY | VDN  | VUP  | ___ |       | LEFT  | DOWN | UP | RIGHT | INS  |
//                        | CTRL | HELD | SPC  | ___ | ENTER | RAISE | GUI  |

                lower_layer {
                        label = "LOWER";
                        bindings = <
&kp GRAVE  &kp N1      &kp N2      &kp N3            &kp N4         &kp N5        &kp N6     &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp DEL    &tab_close  &tab_prev   &tab_next         &tab_reload    &tab_new      &none      &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
&trans     &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_VOL_DN   &kp C_VOL_UP  &none      &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &kp INSERT
                                   &trans            &trans         &trans        &trans     &trans     &trans
                        >;
                };

// | ~     | !  | @  | #    | $     | %   | ___ | ^     | &     | *    | (    | )   | BSPC |
// | DEL   | F1 | F2 | F3   | F4    | F5  | ___ | F6    | _     | +    | {    | }   | "|"  |
// | SHIFT | F7 | F8 | F9   | F10   | F11 | ___ | F12   | HOME  | PGDN | PGUP | END | INS  |
//                   | CTRL | LOWER | SPC | ___ | ENTER | HELD  | GUI  |

                raise_layer {
                        label = "RAISE";
                        bindings = <
&kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR     &kp RPAR  &trans
&kp DEL    &kp F1    &kp F2   &kp F3    &kp F4    &kp F5     &kp F6     &kp UNDER  &kp PLUS         &kp LBRC     &kp RBRC  &kp PIPE
&trans     &kp F7    &kp F8   &kp F9    &kp F10   &kp F11    &kp F12    &kp HOME   &kp PAGE_DOWN    &kp PAGE_UP  &kp END   &kp INSERT
                              &trans    &trans    &trans     &trans     &trans     &trans
                        >;
                };

// |   | ENG  | LT   | RU     |      |   | ___ | BT0  | BT1   | BT2 | BT3 | BT4 | BT_CLR |
// |   | WWW  | MAIL | CALC   |      |   | ___ | BASE | BASE2 |     |     |     |        |
// |   | NUMB | CAPS | SCROLL |      |   | ___ | BASE | BASE2 |     |     |     |        |
//                   |        | HELD |   | ___ |      | HELD  |     |

                adjust_layer {
                        label = "ADJUST";
                        bindings = <
&none  &lng_eng        &lng_lt         &lng_ru              &none   &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none  &kp C_AC_HOME   &kp C_AL_EMAIL  &kp C_AL_CALCULATOR  &none   &none  &to BASE      &to BASE2     &none         &none         &none         &none
&none  &kp KP_NUMLOCK  &kp CAPSLOCK    &kp SCROLLLOCK       &none   &none  &to BASE      &to BASE2     &none         &none         &none         &none
                                       &none                &trans  &none  &none         &trans        &none
                        >;
                };

// | HELD | 1 | 2  | 3    | 4 | 5 | ___ |   6   | 7 | 8 | 9 | 0 | BSPC |
// |      |   |    |      |   |   | ___ |   -   | 4 | 5 | 6 | / |  =   |
// |      |   |    |      |   |   | ___ |   +   | 1 | 2 | 3 | * |      |
//                 | RALT |   |   | ___ | ENTER | , | 0 |

                number_layer {
                        label = "NUMBER";
                        bindings = <
&none  &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_NUMBER_7 &kp KP_NUMBER_8 &kp KP_NUMBER_9 &kp KP_NUMBER_0 &kp BACKSPACE
&none  &none           &none           &none           &none           &none           &kp KP_MINUS    &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_DIVIDE   &key_summary
&none  &none           &none           &none           &none           &none           &kp KP_PLUS     &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_MULTIPLY &none
                                       &kp RALT        &none           &none           &trans          &kp KP_DOT      &kp KP_NUMBER_0
                        >;
                };

// | TAB      | Q | W | E    | R      | T   | ___ | Y     | U      | I   | O | P | BSPC |
// | TD_CTRL  | A | S | D    | F      | G   | ___ | H     | J      | K   | L | : |  '   |
// | TD_SHIFT | Z | X | C    | V      | B   | ___ | N     | M      | ,   | . | / | DEL  |
//                    | LALT | LOWER2 | SPC | ___ | ENTER | RAISE2 | GUI |

                base2_layer {
                        label = "BASE_2";
                        bindings = <
&kp TAB  &kp Q  &kp W  &kp E      &kp R       &kp T           &kp Y      &kp U       &kp I      &kp O    &kp P     &kp BACKSPACE
&td0     &kp A  &kp S  &kp D      &kp F       &kp G           &kp H      &kp J       &kp K      &kp L    &kp SEMI  &kp SQT
&td1     &kp Z  &kp X  &kp C      &kp V       &kp B           &kp N      &kp M       &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE
                       &kp LALT   &mo LOWER2  &kp SPACE       &kp ENTER  &mo RAISE2  &kp LGUI
                        >;
                };

// | `     | 1     | 2    | 3    | 4     | 5    | ___ | 6     | 7      | 8    | 9  | 0     | BSPC |
// | CTRL  | TABCL | TABP | TABN | TABR  | TABN | ___ | INS   | -      | =    | [  | ]     | \    |
// | SHIFT | PREV  | NEXT | PLAY | VDN   | VUP  | ___ | RALT  | LEFT   | DOWN | UP | RIGHT | DEL  |
//                        | LALT | HELD  | SPC  | ___ | ENTER | RAISE2 | GUI  |

                lower2_layer {
                        label = "LOWER_2";
                        bindings = <
&kp GRAVE  &kp N1      &kp N2      &kp N3            &kp N4         &kp N5        &kp N6         &kp N7      &kp N8     &kp N9    &kp N0     &kp BACKSPACE
&kp LCTRL  &tab_close  &tab_prev   &tab_next         &tab_reload    &tab_new      &kp INSERT     &kp MINUS   &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
&kp LSHFT  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_VOL_DN   &kp C_VOL_UP  &kp RA(RSHFT)  &kp LEFT    &kp DOWN   &kp UP    &kp RIGHT  &kp DELETE
                                   &kp LALT          &mo LOWER2     &kp SPACE     &kp ENTER      &mo RAISE2  &kp LGUI
                        >;
                };

// | ~     | !  | @  | #    | $      | %   | ___ | ^     | &    | *    | (    | )   | BSPC |
// | CTRL  | F1 | F2 | F3   | F4     | F5  | ___ | F6    | _    | +    | {    | }   | "|"  |
// | SHIFT | F7 | F8 | F9   | F10    | F11 | ___ | F12   | HOME | PGDN | PGUP | END | DEL  |
//                   | LALT | LOWER2 | SPC | ___ | ENTER | HELD | GUI  |

                raise2_layer {
                        label = "RAISE_2";
                        bindings = <
&kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR    &kp PRCNT  &kp CARET  &kp AMPS    &kp KP_MULTIPLY  &kp LPAR     &kp RPAR  &kp BACKSPACE
&kp LCTRL  &kp F1    &kp F2   &kp F3    &kp F4      &kp F5     &kp F6     &kp UNDER   &kp PLUS         &kp LBRC     &kp RBRC  &kp PIPE
&kp LSHFT  &kp F7    &kp F8   &kp F9    &kp F10     &kp F11    &kp F12    &kp HOME    &kp PAGE_DOWN    &kp PAGE_UP  &kp END   &kp DELETE
                              &kp LALT  &mo LOWER2  &kp SPACE  &kp ENTER  &mo RAISE2  &kp LGUI
                        >;
                };

// |   | ENG  | LT   | RU     |      |   | ___ | BT0  | BT1   | BT2 | BT3 | BT4 | BT_CLR |
// |   | WWW  | MAIL | CALC   |      |   | ___ | BASE | BASE2 |     |     |     |        |
// |   | NUMB | CAPS | SCROLL |      |   | ___ | BASE | BASE2 |     |     |     |        |
//                   |        | HELD |   | ___ |      | HELD  |     |

                adjust2_layer {
                        label = "ADJUST_2";
                        bindings = <
&none  &lng_eng        &lng_lt         &lng_ru              &none       &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none  &kp C_AC_HOME   &kp C_AL_EMAIL  &kp C_AL_CALCULATOR  &none       &none  &to BASE      &to BASE2     &none         &none         &none         &none
&none  &kp KP_NUMLOCK  &kp CAPSLOCK    &kp SCROLLLOCK       &none       &none  &to BASE      &to BASE2     &none         &none         &none         &none
                                       &none                &mo LOWER2  &none  &none         &mo RAISE2    &none
                        >;
                };

// |      | 7 | 8 | 9 | = | RALT | ___ |       |      |      |    |       | BSPC |
// | HELD | 4 | 5 | 6 | - | /    | ___ |       |      |      |    |       |      |
// | HELD | 1 | 2 | 3 | + | *    | ___ |       | LEFT | DOWN | UP | RIGHT | DEL  |
//                | 0 | , | SPC  | ___ | ENTER |      | RALT |

                number2_layer {
                        label = "NUMBER_2";
                        bindings = <
&none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &key_summary  &kp RALT         &none      &none     &none     &none   &none      &kp BACKSPACE
&none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp KP_DIVIDE    &none      &none     &none     &none   &none      &none
&none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS   &kp KP_MULTIPLY  &none      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp DELETE
                                         &kp KP_NUMBER_0  &kp KP_DOT    &kp SPACE        &kp ENTER  &none     &kp RALT
                        >;
                };
        };
};