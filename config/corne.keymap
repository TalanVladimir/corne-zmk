#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define NUM_ALT 4
#define NUM_CTRL 5

#define COMBO_ALL(NAME, BINDINGS, KEYPOS) \
        combo_##NAME { \
                timeout-ms = <50>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <0 1 2 3 4 5 6 7 8 9>; \
        };

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
        combo_##NAME { \
                timeout-ms = <50>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
                layers = <LAYERS>; \
        };

// #define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */
// #undef MOVE_UP
// #undef MOVE_DOWN
// #undef MOVE_LEFT
// #undef MOVE_RIGHT
// #define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
// #define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
// #define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
// #define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

// &mmv {
// 	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
// };

// #define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

// #undef SCROLL_UP
// #undef SCROLL_DOWN
// #undef SCROLL_LEFT
// #undef SCROLL_RIGHT
// #define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
// #define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
// #define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
// #define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

// &mwh {
//   time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
// };

//Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
        macros {
                tab_prev: tab_prev {
                        label = "ZM_tab_prev";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_UP>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_next: tab_next {
                        label = "ZM_tab_next";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_DOWN>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                
                tab_reload: tab_reload {
                        label = "ZM_tab_reload";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp R>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_new: tab_new {
                        label = "ZM_tab_new";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp T>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_close: tab_close {
                        label = "ZM_tab_close";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp F4>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                lng_eng: lng_eng {
                        label = "ZM_lng_eng";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N1>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                lng_lt: lng_lt {
                        label = "ZM_lng_lt";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N2>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                lng_ru: lng_ru {
                        label = "ZM_lng_ru";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N3>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                key_summary: key_summary {
                        label = "ZM_key_summary";
                        compatible = "zmk,behavior-macro";

                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp KP_N6 &kp KP_N1>
                                , <&macro_release &kp LALT>
                                ;
                };
        };

        behaviors {
                td_alt: tab_dance_alt {
                        label = "TAP_DANCE_ALT";
                        compatible = "zmk,behavior-tap-dance";

                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LALT>, <&mo NUM_ALT>;
                };

                td_ctrl: tap_dance_ctrl {
                        label = "TAP_DANCE_CTRL";
                        compatible = "zmk,behavior-tap-dance";

                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LCTRL>, <&mo NUM_CTRL>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";

                base_adjust_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

// | 0  | 1  | 2  | 3  | 4  | 5  | ___ | 6  | 7  | 8  | 9  | 10 | 11 |
// | 12 | 13 | 14 | 15 | 16 | 17 | ___ | 18 | 19 | 20 | 21 | 22 | 23 |
// | 24 | 25 | 26 | 27 | 28 | 29 | ___ | 30 | 31 | 32 | 33 | 34 | 35 |
//                | 36 | 37 | 38 | ___ | 39 | 40 | 41 |

        combos {
                compatible = "zmk,combos";

                COMBO_ALL(esc_one_two, &kp ESC, 0 1)
                COMBO(esc_null_one, &kp ESC, 10 11, 0)

                COMBO_ALL(set_eng, &lng_eng, 1 2 3)
                COMBO_ALL(set_lt, &lng_lt, 13 14 15)
                COMBO_ALL(set_ru, &lng_ru, 25 26 27)
        };

        keymap {
                compatible = "zmk,keymap";

// | TAB     | Q | W | E       | R      | T   | ___ | Y     | U      | I   | O | P | BSPC |
// | TD_CTRL | A | S | D       | F      | G   | ___ | H     | J      | K   | L | : |  '   |
// | SHIFT   | Z | X | C       | V      | B   | ___ | N     | M      | ,   | . | / | DEL  |
//                   | TD_LALT | LOWER2 | SPC | ___ | ENTER | RAISE2 | GUI |

                base_layer {
                        label = "BASE";
                        bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&td_ctrl   &kp A  &kp S  &kp D    &kp F      &kp G          &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE
                         &td_alt  &mo LOWER  &kp SPACE      &kp ENTER  &mo RAISE  &kp LGUI
                        >;
                };

// | `     | 1     | 2    | 3    | 4     | 5    | ___ | 6     | 7     | 8    | 9  | 0     | BSPC |
// | CTRL  | TABCL | TABP | TABN | TABR  | TABN | ___ | INS   | -     | =    | [  | ]     | \    |
// | SHIFT | PLAY  | PREV | NEXT | VDN   | VUP  | ___ | PRINT | LEFT  | DOWN | UP | RIGHT | DEL  |
//                        | LALT | HELD  | RALT | ___ | RALT  | RAISE | GUI  |

                lower_layer {
                        label = "LOWER";
                        bindings = <
&kp GRAVE  &kp N1            &kp N2      &kp N3      &kp N4        &kp N5            &kp N6      &kp N7     &kp N8     &kp N9    &kp N0     &kp BACKSPACE
&kp LCTRL  &tab_close        &tab_prev   &tab_next   &tab_reload   &tab_new          &kp INSERT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
&kp LSHFT  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP      &kp PSCRN   &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &kp DELETE
                                         &kp LALT    &mo LOWER     &kp RALT          &kp RALT    &mo RAISE  &kp LGUI
                        >;
                };

// | ~     | !  | @  | #    | $     | %    | ___ | ^    | &    | *    | (    | )   | BSPC |
// | CTRL  | F1 | F2 | F3   | F4    | F5   | ___ | F6   | _    | +    | {    | }   | "|"  |
// | SHIFT | F7 | F8 | F9   | F10   | F11  | ___ | F12  | HOME | PGDN | PGUP | END | DEL  |
//                   | LALT | LOWER | RALT | ___ | RALT | HELD | GUI  |

                raise_layer {
                        label = "RAISE";
                        bindings = <
&kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTERISK   &kp LPAR     &kp RPAR  &kp BACKSPACE
&kp LCTRL  &kp F1    &kp F2   &kp F3    &kp F4     &kp F5         &kp F6     &kp UNDER  &kp PLUS       &kp LBRC     &kp RBRC  &kp PIPE
&kp LSHFT  &kp F7    &kp F8   &kp F9    &kp F10    &kp F11        &kp F12    &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END   &kp DELETE
                              &kp LALT  &mo LOWER  &kp RALT       &kp RALT   &mo RAISE  &kp LGUI
                        >;
                };

// | NLOCK  | ENG | LT   | RU   |      |   | ___ | BT0 | BT1 | BT2 | BT3 | BT4 | BT_CLR |
// | CAPS   | WWW | MAIL | CALC |      |   | ___ |     |     |     |     |     |        |
// | SCROLL |     |      |      |      |   | ___ |     |     |     |     |     |        |
//                       |      | HELD |   | ___ |     |     |     |

                adjust_layer {
                        label = "ADJUST";
                        bindings = <
&kp KP_NLCK     &lng_eng        &lng_lt         &lng_ru              &none      &none      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&kp CAPSLOCK    &kp C_AC_HOME   &kp C_AL_EMAIL  &kp C_AL_CALCULATOR  &none      &none      &none         &none         &none         &none         &none         &none
&kp SCROLLLOCK  &none           &none           &none                &none      &none      &none         &none         &none         &none         &none         &none
                                &none           &mo LOWER            &none      &none      &mo RAISE     &none
                        >;
                };

// | NLOCK | = | 7 | 8    | 9 | 0   | ___ |       |      |      |    |       | BSPC |
// | HELD  | - | 4 | 5    | 6 | /   | ___ |       |      |      |    |       |      |
// | RALT  | + | 1 | 2    | 3 | *   | ___ |       | LEFT | DOWN | UP | RIGHT | DEL  |
//                 | HELD | , | SPC | ___ | ENTER |      |      |

                numalt_layer {
                        label = "NUM_ALT";
                        bindings = <
&kp KP_NLCK  &key_summary  &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_N0            &none      &none     &none     &none   &none      &kp BACKSPACE
&none        &kp KP_MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_DIVIDE        &none      &none     &none     &none   &none      &none
&kp RALT     &kp KP_PLUS   &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_MULTIPLY      &none      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp DELETE
                                      &none      &kp KP_DOT  &kp SPACE            &kp ENTER  &none     &none
                        >;
                };

// | NLOCK | = | 7 | 8    | 9 | 0   | ___ |       |      |      |    |       | BSPC |
// | HELD  | - | 4 | 5    | 6 | /   | ___ |       |      |      |    |       |      |
// | RALT  | + | 1 | 2    | 3 | *   | ___ |       | LEFT | DOWN | UP | RIGHT | DEL  |
//                 | HELD | , | SPC | ___ | ENTER |      |      |

                numctrl_layer {
                        label = "NUM_CTRL";
                        bindings = <
&kp KP_NLCK  &key_summary  &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_N0            &none      &none     &none     &none   &none      &kp BACKSPACE
&none        &kp KP_MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_DIVIDE        &none      &none     &none     &none   &none      &none
&kp RALT     &kp KP_PLUS   &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_MULTIPLY      &none      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp DELETE
                                      &none      &kp KP_DOT  &kp SPACE            &kp ENTER  &none     &none
                        >;
                };
        };
};