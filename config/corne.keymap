#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define QWERTY 0
#define LOWER 1
#define RAISE 2
#define NUMBER 3
#define CONNECT  4

// &lt for modifiers

/ {

        macros {
                tab_prev: tab_prev {
                        label = "ZM_tab_prev";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_UP>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                tab_next: tab_next {
                        label = "ZM_tab_next";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp PAGE_DOWN>
                                , <&macro_release &kp LCTRL>
                                ;
                };

                
                tab_reload: tab_reload {
                        label = "ZM_tab_reload";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp R>
                                , <&macro_release &kp LCTRL>
                                ;
                };
                
                tab_new: tab_new {
                        label = "ZM_tab_new";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp T>
                                , <&macro_release &kp LCTRL>
                                ;
                };
                
                tab_close: tab_close {
                        label = "ZM_tab_close";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp F4>
                                , <&macro_release &kp LCTRL>
                                ;
                };
                
                lng_eng: lng_eng {
                        label = "ZM_lng_eng";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N1>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };

                lng_lt: lng_lt {
                        label = "ZM_lng_lt";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N2>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };
                
                lng_ru: lng_ru {
                        label = "ZM_lng_ru";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LSHFT>
                                , <&macro_tap &kp N3>
                                , <&macro_release &kp LCTRL &kp LSHFT>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                qwerty_layer {

// |ESC/BT  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  BSPC  |
// |NUMB/TAB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  :  |   '    |
// | SHIFT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |  GUI   |
//                      | CTRL|LOWER|BSPC |   |ENTER|RAISE| ALT |

                        bindings = <
&lt CONNECT ESC  &kp Q     &kp W  &kp E      &kp R      &kp T      &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&lt NUMBER TAB   &kp A     &kp S  &kp D      &kp F      &kp G      &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT        &kp Z     &kp X  &kp C      &kp V      &kp B      &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_GUI
                                  &kp LCTRL  &mo LOWER  &kp SPACE  &kp ENTER  &mo RAISE  &kp LALT
                        >;
                };

                lower_layer {

// | TABCL|  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// |      | TABP| TABN| TABR| TABN|     |   |     | HOME| UP  | END |     |  DEL |
// |      | PREV| NEXT| PLAY| VDN | VUP |   |     | LEFT| DN  |RIGHT|     |      |
//                    |     |     |     |   |     |     |     |

                        bindings = <
&tab_close  &kp N1      &kp N2      &kp N3            &kp N4         &kp N5        &kp N6   &kp N7    &kp N8    &kp N9    &kp N0  &kp BACKSPACE
&trans      &tab_prev   &tab_next   &tab_reload       &tab_new       &none         &none    &kp HOME  &kp UP    &kp END   &none   &kp DELETE
&trans      &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_VOL_DN   &kp C_VOL_UP  &none    &kp LEFT  &kp DOWN  &kp RIGHT &none   &trans
                                    &trans            &trans         &trans        &trans   &trans    &trans
                        >;
                };

                raise_layer {
                        
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// |      | ENG | LT  | RU  |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
//                    |     |     |     |   |     |     |     |

                        bindings = <
&trans  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&trans  &lng_eng  &lng_lt  &lng_ru   &none     &none      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
&trans  &none     &none    &none     &none     &none      &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
                           &trans    &trans    &trans     &trans     &trans     &trans
                        >;
                };

                number_layer {

// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// |      |     |     |     |     |     |   |  -  |  4  |  5  |  6  |  /  |  DEL |
// |      |     |     |     |     |     |   |  +  |  1  |  2  |  3  |  *  |      |
//                    |     |     |     |   |  .  |  ,  |  0  |

                        bindings = <
&none &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_NUMBER_7 &kp KP_NUMBER_8 &kp KP_NUMBER_9 &kp KP_NUMBER_0 &kp BACKSPACE
&none &none           &none           &none           &none           &none           &kp KP_MINUS    &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_DIVIDE   &kp DELETE
&none &none           &none           &none           &none           &none           &kp KP_PLUS     &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_MULTIPLY &none
                          	      &none           &trans          &none           &kp KP_DOT      &kp KP_COMMA    &kp KP_NUMBER_0
                        >;
                };

                connect_layer {

// |      | BT0 | BT1 | BT2 | BT3 | BT4 |   | BT0 | BT1 | BT2 | BT3 | BT4 |      |
// | BCLR |     |     |     |     |     |   |     |     |     |     |     | BCLR |
// | BCLR |     |     |     |BOOTL|     |   |     |BOOTL|     |     |     | BCLR |
//                    |     |     |     |   |     |     |     |

                        bindings = <
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&bt BT_CLR  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bt BT_CLR
&bt BT_CLR  &none         &none         &none         &none         &bootloader   &bootloader   &none         &none         &none         &none         &bt BT_CLR
                                        &none         &none         &none         &none         &none         &none
                        >;
                };
        };
};


// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘


// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |