/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define NAV 3

/ { 
        
behaviors
{
        hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <220>;
                quick_tap_ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
        };
};


keymap { compatible = "zmk,keymap";

// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R      |  T  |    |  Y  |  U         |  I      |  O  |  P     | BKSP |
// |  TAB |  A  |  S  |  D  |  F      |  G  |    |  H  |  J         |  K      |  L  |  ;     |  '   |
// | SHFT |  Z  |  X  |  C  |  V      |  B  |    |  N  |  M         |  ,      |  .  |  GUI / | ALT  |
//                    | CTRL| LWR SPC | SPC |    | ENT | RAISE BKSP | NAV DEL |
default_layer { bindings = <

&kp ESC         &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSPC
&kp TAB         &kp A           &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp SQT
&kp LSHFT       &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &kp LGUI FSLH   &kp LALT
                                                &kp LCTRL       &mo LOWER SPACE &kp SPACE       &kp RET         &mo RAISE BSPC  &kp NAV DEL
>; };

// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
lower_layer { bindings = <

&kp TAB         &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp BSPC
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans          &trans
&kp LSHFT       &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                                &kp LGUI        &trans          &kp SPACE       &kp RET         &trans          &kp RALT
>; };

// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
raise_layer { bindings = <

&kp TAB         &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &kp CARET       &kp AMPS        &kp KP_MULTIPLY &kp LPAR        &kp RPAR        &kp BSPC
&kp LCTRL       &trans          &trans          &trans          &trans          &trans          &kp MINUS       &kp EQUAL       &kp LBKT        &kp RBKT        &kp BSLH        &kp GRAVE
&kp LSHFT       &trans          &trans          &trans          &trans          &trans          &kp UNDER       &kp PLUS        &kp LBRC        &kp RBRC        &kp PIPE        &kp TILDE
                                                &kp LGUI        &trans          &kp SPACE       &kp RET         &trans          &kp RALT
>; };

// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
nav_layer { bindings = <

&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &kp UP          &trans          &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &kp LEFT        &kp DOWN        &kp RIGHT       &trans
                                                &trans          &trans          &trans          &trans          &trans          &trans
>; };

// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
empty_layer { bindings = <

&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                                &trans          &trans          &trans          &trans          &trans          &trans
>; };

}; };